{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/About",
      "regex": "^/About(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/About(?:/)?$"
    },
    {
      "page": "/Blog",
      "regex": "^/Blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Blog(?:/)?$"
    },
    {
      "page": "/BlogPost",
      "regex": "^/BlogPost(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/BlogPost(?:/)?$"
    },
    {
      "page": "/Contact",
      "regex": "^/Contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Contact(?:/)?$"
    },
    {
      "page": "/CookiePolicy",
      "regex": "^/CookiePolicy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/CookiePolicy(?:/)?$"
    },
    {
      "page": "/Index",
      "regex": "^/Index(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Index(?:/)?$"
    },
    {
      "page": "/NotFound",
      "regex": "^/NotFound(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/NotFound(?:/)?$"
    },
    {
      "page": "/Platform",
      "regex": "^/Platform(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Platform(?:/)?$"
    },
    {
      "page": "/Pricing",
      "regex": "^/Pricing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/Pricing(?:/)?$"
    },
    {
      "page": "/PrivacyPolicy",
      "regex": "^/PrivacyPolicy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/PrivacyPolicy(?:/)?$"
    },
    {
      "page": "/TermsOfService",
      "regex": "^/TermsOfService(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/TermsOfService(?:/)?$"
    },
    {
      "page": "/UseCases",
      "regex": "^/UseCases(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/UseCases(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/use-cases/AspiringCreators",
      "regex": "^/use\\-cases/AspiringCreators(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/use\\-cases/AspiringCreators(?:/)?$"
    },
    {
      "page": "/use-cases/ContentInfluencers",
      "regex": "^/use\\-cases/ContentInfluencers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/use\\-cases/ContentInfluencers(?:/)?$"
    },
    {
      "page": "/use-cases/IndieDevelopers",
      "regex": "^/use\\-cases/IndieDevelopers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/use\\-cases/IndieDevelopers(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}